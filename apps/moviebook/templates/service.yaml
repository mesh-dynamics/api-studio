# Copyright 2017 Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: details
  namespace: {{namespace}}
  labels:
    app: details
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: details
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: details-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: details
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: details
        image: istio/examples-bookinfo-details-v1:1.8.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        ports:
        - containerPort: 9080
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  namespace: {{namespace}}
  labels:
    app: ratings
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: ratings
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ratings-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: ratings
        image: istio/examples-bookinfo-ratings-v1:1.8.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        ports:
        - containerPort: 9080
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: {{namespace}}
  labels:
    app: reviews
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: reviews
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: reviews
        image: istio/examples-bookinfo-reviews-v1:1.8.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "130Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        ports:
        - containerPort: 9080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v2
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v2
        namespace: {{namespace}}
    spec:
      containers:
      - name: reviews
        image: istio/examples-bookinfo-reviews-v2:1.8.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "130Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        ports:
        - containerPort: 9080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reviews-v3
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v3
        namespace: {{namespace}}
    spec:
      containers:
      - name: reviews
        image: istio/examples-bookinfo-reviews-v3:1.8.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "130Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        ports:
        - containerPort: 9080
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  namespace: {{namespace}}
  labels:
    app: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: productpage-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: productpage
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: productpage
        image: istio/examples-bookinfo-productpage-v1:1.8.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "70Mi"
            cpu: "50m"
          limits:
            memory: "130Mi"
            cpu: "100m"
        ports:
        - containerPort: 9080
---

##################################################################################################
# MovieInfo services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: movieinfo
  namespace: {{namespace}}
  labels:
    app: movieinfo
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: movieinfo
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: movieinfo-v1  #movieinfo without bugs
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: movieinfo
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: movieinfo
        image: cubeiocorp/sample_apps-mirest:be3a7539cc64b3fc35d5a8482262d74937a99903
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "190Mi"
            cpu: "100m"
          limits:
            memory: "250Mi"
            cpu: "150m"
        ports:
        - containerPort: 8080
        env:
          - name: USE_KUBE
            value: "true"
          - name: MYSQL_HOST
            value: sakila2.cnt3lftdrpew.us-west-2.rds.amazonaws.com
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_DBNAME
            value: sakila
          - name: MYSQL_USERNAME
            value: cube
          - name: MYSQL_PWD
            value: cubeio12
          - name: RESTWRAPJDBC_URI
            value: http://restwrapjdbc:8080/restsql
          - name: GET_BOOK_REVIEWS
            value: "true"
          - name: USE_CACHING
            value: "false"
          - name: ADD_TRACING_HEADERS
            value: "true"
          - name: USE_TOKEN_AUTHENTICATION
            value: "false"
          - name: DISPLAYNAME_LASTFIRST
            value: "true"
          - name: NUM_ACTORS_TO_DISPLAY
            value: "4"
          - name: RATINGS_5PT_SCALE
            value: "true"
          - name: CONCAT_BUG
            value: "false"
          - name: FAIL_PERCENT
            value: "0"

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: movieinfo-v2    #Movieinfo with bugs
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: movieinfo
        version: v2
        namespace: {{namespace}}
    spec:
      containers:
      - name: movieinfo
        image: cubeiocorp/sample_apps-mirest:demo-1.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "190Mi"
            cpu: "100m"
          limits:
            memory: "250Mi"
            cpu: "150m"
        ports:
        - containerPort: 8080
        env:
          - name: USE_KUBE
            value: "true"
          - name: MYSQL_HOST
            value: sakila2.cnt3lftdrpew.us-west-2.rds.amazonaws.com
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_DBNAME
            value: sakila
          - name: MYSQL_USERNAME
            value: cube
          - name: MYSQL_PWD
            value: cubeio12
          - name: RESTWRAPJDBC_URI
            value: http://restwrapjdbc:8080/restsql
          - name: GET_BOOK_REVIEWS
            value: "true"
          - name: USE_CACHING
            value: "false"
          - name: ADD_TRACING_HEADERS
            value: "true"
          - name: USE_TOKEN_AUTHENTICATION
            value: "false"
          - name: DISPLAYNAME_LASTFIRST
            value: "flase"
          - name: NUM_ACTORS_TO_DISPLAY
            value: "2"
          - name: RATINGS_5PT_SCALE
            value: "true"
          - name: CONCAT_BUG
            value: "true"
          - name: FAIL_PERCENT
            value: "0"
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: movieinfo
  namespace: {{namespace}}
spec:
  host: movieinfo
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
---
##################################################################################################
# Rest Wrap JDBC services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: restwrapjdbc
  namespace: {{namespace}}
  labels:
    app: restwrapjdbc
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: restwrapjdbc
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: restwrapjdbc-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: restwrapjdbc
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: restwrapjdbc
        image: cubeiocorp/restwrapjdbc:demo-1.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "190Mi"
            cpu: "100m"
          limits:
            memory: "250Mi"
            cpu: "250m"
        ports:
        - containerPort: 8080
