##################################################################################################
# Cube Web Services - Record
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: cubews-record
  namespace: {{namespace}}
  labels:
    app: cube
    component: cubews-record
spec:
  ports:
  - port: 8080
    name: http
  selector:
    component: cubews-record
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cubews-record-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: cubews-record
        app: cube
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: cubews
        image: cubeiocorp/cubews:{{cubeio_tag}}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "512Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /cs/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /cs/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
          - name: solr_base_url
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SOLR_BASE_URL
          - name: app_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: APP_DOGFOOD
          - name: solr_core
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SOLR_CORE
          - name: instance_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: INSTANCE_DOGFOOD
          - name: cube_record_service
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUBE_RECORD_SERVICE
          - name: cube_mock_service
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUBE_RECORD_SERVICE
          - name: service_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SERVICE_DOGFOOD
          - name: customer_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUSTOMER_DOGFOOD
          - name: redis_host
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: REDIS_HOST
      imagePullSecrets:
      - name: regcred

##################################################################################################
# Cube Web Services - Mock
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: cubews-mock
  namespace: {{namespace}}
  labels:
    app: cube
    component: cubews-mock
spec:
  ports:
  - port: 8080
    name: http
  selector:
    component: cubews-mock
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cubews-mock-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cube
        component: cubews-mock
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: cubews
        image: cubeiocorp/cubews:{{cubeio_tag}}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "512Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ms/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ms/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
          - name: solr_base_url
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SOLR_BASE_URL
          - name: app_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: APP_DOGFOOD
          - name: solr_core
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SOLR_CORE
          - name: instance_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: INSTANCE_DOGFOOD
          - name: cube_record_service
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUBE_RECORD_SERVICE
          - name: cube_mock_service
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUBE_RECORD_SERVICE
          - name: service_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SERVICE_DOGFOOD
          - name: customer_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUSTOMER_DOGFOOD
          - name: redis_host
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: REDIS_HOST
      imagePullSecrets:
      - name: regcred

##################################################################################################
# Cube Web Services - Replay
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: cubews-replay
  namespace: {{namespace}}
  labels:
    app: cube
    component: cubews-replay
spec:
  ports:
  - port: 8080
    name: http
  selector:
    component: cubews-replay
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cubews-replay-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cube
        component: cubews-replay
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: cubews
        image: cubeiocorp/cubews:{{cubeio_tag}}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "512Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /rs/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /rs/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
          - name: solr_base_url
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SOLR_BASE_URL
          - name: app_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: APP_DOGFOOD
          - name: instance_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: INSTANCE_DOGFOOD
          - name: service_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SERVICE_DOGFOOD
          - name: solr_core
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: SOLR_CORE
          - name: cube_record_service
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUBE_RECORD_SERVICE
          - name: cube_mock_service
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUBE_RECORD_SERVICE
          - name: customer_dogfood
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: CUSTOMER_DOGFOOD
          - name: redis_host
            valueFrom:
              configMapKeyRef:
                name: cubews
                key: REDIS_HOST
      imagePullSecrets:
      - name: regcred
##################################################################################################
# Cube UI
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: cubeui
  namespace: {{namespace}}
  labels:
    app: cube
    component: cubeui
spec:
  ports:
  - port: 80
    name: http
  selector:
    component: cubeui
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cubeui-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cube
        component: cubeui
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: cubeui
        image: cubeiocorp/cubeui:{{cubeui_tag}}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: regcred
#################################################################################################
# CubeUI backend
#################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: cubeui-backend
  namespace: {{namespace}}
  labels:
    app: cube
    component: cubeui-backend
spec:
  ports:
  - port: 8080
    name: http
  selector:
    component: cubeui-backend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cubeui-backend-v1
  namespace: {{namespace}}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cube
        component: cubeui-backend
        version: v1
        namespace: {{namespace}}
    spec:
      containers:
      - name: cubeui-backend
        image: cubeiocorp/cubeuibackend:{{cubeui_backend_tag}}
        imagePullPolicy: Always
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "{{springboot_profile}}"
        - name: spring.datasource.url
          value: "jdbc:postgresql://postgresql.postgres-dev.svc.cluster.local:5432/cubedevdb?schema=qui"
        - name: allowed.origins.path
          value: "/usr/local/tomcat/webCorsAllowedOrigins.txt"
        resources:
          requests:
            memory: "640Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: "/usr/local/tomcat/webCorsAllowedOrigins.txt"
          name: cubeui-backend-config
      volumes:
      - name: cubeui-backend-config
        configMap:
         name: cubeui-backend-config
      imagePullSecrets:
      - name: regcred

# TODO: the following exernalname didn't work for a service that didn't go through port 80
# apiVersion: v1
# kind: Service
# metadata:
#   name: aws-mysql-sakila
# spec:
#   type: ExternalName
#   externalName: sakila2.cnt3lftdrpew.us-west-2.rds.amazonaws.com

##################################################################################################
# Mysql data server in the mesh
##################################################################################################
# apiVersion: v1
# kind: Service
# metadata:
#   name: mysql-sakila
#   labels:
#     app: mysql-sakila
# spec:
#   ports:
#   - port: 3306
#     name: tcp
#     protocol: TCP
#   selector:
#     app: mysql-sakila
# ---
# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#   name: mysql-sakila-v1
# spec:
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: mysql-sakila
#         version: v1
#     spec:
#       containers:
#       - name: mysql-sakila
#         image: cubeiocorp/mysql-sakila:v3
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 3306
# ---
##################################################################################################
# External mysql server and endpoint
##################################################################################################

# kind: Endpoints
# apiVersion: v1
# metadata:
#  name: aws-mysql-sakila
# subsets:
#  - addresses:
#      - ip: 54.69.153.210 #sakila2.cnt3lftdrpew.us-west-2.rds.amazonaws.com
#    ports:
#      - port: 3306
