
# docker mysql setup
### link: https://dzone.com/articles/docker-for-mac-mysql-setup
### make sure of the 3306:3306 mapping.
docker run -p 3306:3306 -d --name mysql -e MYSQL_ROOT_PASSWORD=password mysql/mysql-server
docker exec -it <docker-name> bash
mysql -uroot -ppassword

Important: This step is required to log into MySQL from outside the container. The root user will not be able to log in from the host OS (Mac OS). Use % instead of localhost in arun@localhost.

mysql> CREATE USER 'cube'@'%' IDENTIFIED BY 'cubeio';
Query OK, 0 rows affected (0.00 sec)
mysql> GRANT ALL PRIVILEGES ON * . * TO 'cube'@'%';
Query OK, 0 rows affected (0.00 sec)
mysql> quit

# from the host.
# copy sakila files from the source folder (change as appropriate)
Venkateshs-MacBook-Pro:cubeio venky.ganti$ docker cp ~/Downloads/sakila-db/sakila-schema.sql mysql:/
Venkateshs-MacBook-Pro:cubeio venky.ganti$ docker cp ~/Downloads/sakila-db/sakila-data.sql mysql:/
Venkateshs-MacBook-Pro:cubeio venky.ganti$ docker exec -it mysql bash
bash-4.2# ls
bin   dev			  entrypoint.sh  healthcheck.cnf  home	lib64  mnt		    opt   root	sakila-data.sql    sbin  sys  usr
boot  docker-entrypoint-initdb.d  etc		 healthcheck.sh   lib	media  mysql-init-complete  proc  run	sakila-schema.sql  srv	 tmp  var
bash-4.2# mkdir sakila-db
bash-4.2# mv sakila-schema.sql sakila-db
bash-4.2# mv sakila-data.sql sakila-db 
bash-4.2# mysql -ucube -pcubeio -s < sakila-db/sakila-schema.sql 
bash-4.2# mysql -ucube -pcubeio -s < sakila-db/sakila-data.sql 

### Creating a custom docker image
# https://www.mirantis.com/blog/how-do-i-create-a-new-docker-image-for-my-application
# Make sure you are logged in docker hub in command line (docker login) as cubeiocorp
docker commit -m "Fixing the port mapping" -a "Venky Ganti" mysql cubeiocorp/mysql-sakila-db
docker push cubeiocorp/mysql-sakila-db
