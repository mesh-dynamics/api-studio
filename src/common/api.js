/**
 * This is a file is a global request-response handler.
 * Do not edit this file unless a global change is required.
 */

import axios from "axios";
import { store } from "./helpers";
import auth from "./actions/auth.actions";
import { getAccesToken } from "./utils/lib/common-utils";

const api = axios.create();

const handleTokenChange = () => {
    const token = getAccesToken(store.getState());

    // Default auth header for get and post
    api.defaults.headers.get["Authorization"] = `Bearer ${token}`;
    api.defaults.headers.post["Authorization"] = `Bearer ${token}`;
};

store.subscribe(handleTokenChange);

// Default Get Headers
api.defaults.headers.get["Content-Type"] = "application/json";

// Default POST Headers
api.defaults.headers.post["Content-Type"] = "application/json";

api.interceptors.request.use(
    config => {
        config.withCredentials = false;
        return config;
    },
    error => Promise.reject(error),
);

api.interceptors.response.use(
    response => response.data,
    error => {
        if(error.response && (error.response.status === 403 || error.response.status === 401)) {
            store.dispatch(auth.accessViolationDetected());
        }
        return Promise.reject(error);
    }
);

export default api;