/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cubeiosample.webservices.thirft.thirft;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-10-09")
public class MovieInfo implements org.apache.thrift.TBase<MovieInfo, MovieInfo._Fields>, java.io.Serializable, Cloneable, Comparable<MovieInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MovieInfo");

  private static final org.apache.thrift.protocol.TField ACTORS_LAST_NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("actorsLastNames", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField ACTORS_FIRST_NAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("actorsFirstNames", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField DISPLAY_ACTORS_FIELD_DESC = new org.apache.thrift.protocol.TField("displayActors", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField FILM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("filmId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField FILM_COUNTS_FIELD_DESC = new org.apache.thrift.protocol.TField("filmCounts", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField FILM_COUNTS_STRING_FIELD_DESC = new org.apache.thrift.protocol.TField("filmCountsString", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("timestamp", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField BOOK_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("bookInfo", org.apache.thrift.protocol.TType.STRUCT, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new MovieInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new MovieInfoTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<String> actorsLastNames; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<String> actorsFirstNames; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<String> displayActors; // required
  public int filmId; // required
  public @org.apache.thrift.annotation.Nullable String title; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<Integer> filmCounts; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<String> filmCountsString; // required
  public long timestamp; // required
  public @org.apache.thrift.annotation.Nullable BookInfo bookInfo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACTORS_LAST_NAMES((short)1, "actorsLastNames"),
    ACTORS_FIRST_NAMES((short)2, "actorsFirstNames"),
    DISPLAY_ACTORS((short)3, "displayActors"),
    FILM_ID((short)4, "filmId"),
    TITLE((short)5, "title"),
    FILM_COUNTS((short)6, "filmCounts"),
    FILM_COUNTS_STRING((short)7, "filmCountsString"),
    TIMESTAMP((short)8, "timestamp"),
    BOOK_INFO((short)9, "bookInfo");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACTORS_LAST_NAMES
          return ACTORS_LAST_NAMES;
        case 2: // ACTORS_FIRST_NAMES
          return ACTORS_FIRST_NAMES;
        case 3: // DISPLAY_ACTORS
          return DISPLAY_ACTORS;
        case 4: // FILM_ID
          return FILM_ID;
        case 5: // TITLE
          return TITLE;
        case 6: // FILM_COUNTS
          return FILM_COUNTS;
        case 7: // FILM_COUNTS_STRING
          return FILM_COUNTS_STRING;
        case 8: // TIMESTAMP
          return TIMESTAMP;
        case 9: // BOOK_INFO
          return BOOK_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FILMID_ISSET_ID = 0;
  private static final int __TIMESTAMP_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.BOOK_INFO};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACTORS_LAST_NAMES, new org.apache.thrift.meta_data.FieldMetaData("actorsLastNames", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.ACTORS_FIRST_NAMES, new org.apache.thrift.meta_data.FieldMetaData("actorsFirstNames", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.DISPLAY_ACTORS, new org.apache.thrift.meta_data.FieldMetaData("displayActors", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.FILM_ID, new org.apache.thrift.meta_data.FieldMetaData("filmId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FILM_COUNTS, new org.apache.thrift.meta_data.FieldMetaData("filmCounts", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.FILM_COUNTS_STRING, new org.apache.thrift.meta_data.FieldMetaData("filmCountsString", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("timestamp", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BOOK_INFO, new org.apache.thrift.meta_data.FieldMetaData("bookInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL,
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BookInfo.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MovieInfo.class, metaDataMap);
  }

  public MovieInfo() {
  }

  public MovieInfo(
    java.util.List<String> actorsLastNames,
    java.util.List<String> actorsFirstNames,
    java.util.List<String> displayActors,
    int filmId,
    String title,
    java.util.List<Integer> filmCounts,
    java.util.List<String> filmCountsString,
    long timestamp)
  {
    this();
    this.actorsLastNames = actorsLastNames;
    this.actorsFirstNames = actorsFirstNames;
    this.displayActors = displayActors;
    this.filmId = filmId;
    setFilmIdIsSet(true);
    this.title = title;
    this.filmCounts = filmCounts;
    this.filmCountsString = filmCountsString;
    this.timestamp = timestamp;
    setTimestampIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MovieInfo(MovieInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetActorsLastNames()) {
      java.util.List<String> __this__actorsLastNames = new java.util.ArrayList<String>(other.actorsLastNames);
      this.actorsLastNames = __this__actorsLastNames;
    }
    if (other.isSetActorsFirstNames()) {
      java.util.List<String> __this__actorsFirstNames = new java.util.ArrayList<String>(other.actorsFirstNames);
      this.actorsFirstNames = __this__actorsFirstNames;
    }
    if (other.isSetDisplayActors()) {
      java.util.List<String> __this__displayActors = new java.util.ArrayList<String>(other.displayActors);
      this.displayActors = __this__displayActors;
    }
    this.filmId = other.filmId;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetFilmCounts()) {
      java.util.List<Integer> __this__filmCounts = new java.util.ArrayList<Integer>(other.filmCounts);
      this.filmCounts = __this__filmCounts;
    }
    if (other.isSetFilmCountsString()) {
      java.util.List<String> __this__filmCountsString = new java.util.ArrayList<String>(other.filmCountsString);
      this.filmCountsString = __this__filmCountsString;
    }
    this.timestamp = other.timestamp;
    if (other.isSetBookInfo()) {
      this.bookInfo = new BookInfo(other.bookInfo);
    }
  }

  public MovieInfo deepCopy() {
    return new MovieInfo(this);
  }

  @Override
  public void clear() {
    this.actorsLastNames = null;
    this.actorsFirstNames = null;
    this.displayActors = null;
    setFilmIdIsSet(false);
    this.filmId = 0;
    this.title = null;
    this.filmCounts = null;
    this.filmCountsString = null;
    setTimestampIsSet(false);
    this.timestamp = 0;
    this.bookInfo = null;
  }

  public int getActorsLastNamesSize() {
    return (this.actorsLastNames == null) ? 0 : this.actorsLastNames.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<String> getActorsLastNamesIterator() {
    return (this.actorsLastNames == null) ? null : this.actorsLastNames.iterator();
  }

  public void addToActorsLastNames(String elem) {
    if (this.actorsLastNames == null) {
      this.actorsLastNames = new java.util.ArrayList<String>();
    }
    this.actorsLastNames.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<String> getActorsLastNames() {
    return this.actorsLastNames;
  }

  public MovieInfo setActorsLastNames(@org.apache.thrift.annotation.Nullable java.util.List<String> actorsLastNames) {
    this.actorsLastNames = actorsLastNames;
    return this;
  }

  public void unsetActorsLastNames() {
    this.actorsLastNames = null;
  }

  /** Returns true if field actorsLastNames is set (has been assigned a value) and false otherwise */
  public boolean isSetActorsLastNames() {
    return this.actorsLastNames != null;
  }

  public void setActorsLastNamesIsSet(boolean value) {
    if (!value) {
      this.actorsLastNames = null;
    }
  }

  public int getActorsFirstNamesSize() {
    return (this.actorsFirstNames == null) ? 0 : this.actorsFirstNames.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<String> getActorsFirstNamesIterator() {
    return (this.actorsFirstNames == null) ? null : this.actorsFirstNames.iterator();
  }

  public void addToActorsFirstNames(String elem) {
    if (this.actorsFirstNames == null) {
      this.actorsFirstNames = new java.util.ArrayList<String>();
    }
    this.actorsFirstNames.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<String> getActorsFirstNames() {
    return this.actorsFirstNames;
  }

  public MovieInfo setActorsFirstNames(@org.apache.thrift.annotation.Nullable java.util.List<String> actorsFirstNames) {
    this.actorsFirstNames = actorsFirstNames;
    return this;
  }

  public void unsetActorsFirstNames() {
    this.actorsFirstNames = null;
  }

  /** Returns true if field actorsFirstNames is set (has been assigned a value) and false otherwise */
  public boolean isSetActorsFirstNames() {
    return this.actorsFirstNames != null;
  }

  public void setActorsFirstNamesIsSet(boolean value) {
    if (!value) {
      this.actorsFirstNames = null;
    }
  }

  public int getDisplayActorsSize() {
    return (this.displayActors == null) ? 0 : this.displayActors.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<String> getDisplayActorsIterator() {
    return (this.displayActors == null) ? null : this.displayActors.iterator();
  }

  public void addToDisplayActors(String elem) {
    if (this.displayActors == null) {
      this.displayActors = new java.util.ArrayList<String>();
    }
    this.displayActors.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<String> getDisplayActors() {
    return this.displayActors;
  }

  public MovieInfo setDisplayActors(@org.apache.thrift.annotation.Nullable java.util.List<String> displayActors) {
    this.displayActors = displayActors;
    return this;
  }

  public void unsetDisplayActors() {
    this.displayActors = null;
  }

  /** Returns true if field displayActors is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayActors() {
    return this.displayActors != null;
  }

  public void setDisplayActorsIsSet(boolean value) {
    if (!value) {
      this.displayActors = null;
    }
  }

  public int getFilmId() {
    return this.filmId;
  }

  public MovieInfo setFilmId(int filmId) {
    this.filmId = filmId;
    setFilmIdIsSet(true);
    return this;
  }

  public void unsetFilmId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FILMID_ISSET_ID);
  }

  /** Returns true if field filmId is set (has been assigned a value) and false otherwise */
  public boolean isSetFilmId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FILMID_ISSET_ID);
  }

  public void setFilmIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FILMID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public String getTitle() {
    return this.title;
  }

  public MovieInfo setTitle(@org.apache.thrift.annotation.Nullable String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public int getFilmCountsSize() {
    return (this.filmCounts == null) ? 0 : this.filmCounts.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<Integer> getFilmCountsIterator() {
    return (this.filmCounts == null) ? null : this.filmCounts.iterator();
  }

  public void addToFilmCounts(int elem) {
    if (this.filmCounts == null) {
      this.filmCounts = new java.util.ArrayList<Integer>();
    }
    this.filmCounts.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<Integer> getFilmCounts() {
    return this.filmCounts;
  }

  public MovieInfo setFilmCounts(@org.apache.thrift.annotation.Nullable java.util.List<Integer> filmCounts) {
    this.filmCounts = filmCounts;
    return this;
  }

  public void unsetFilmCounts() {
    this.filmCounts = null;
  }

  /** Returns true if field filmCounts is set (has been assigned a value) and false otherwise */
  public boolean isSetFilmCounts() {
    return this.filmCounts != null;
  }

  public void setFilmCountsIsSet(boolean value) {
    if (!value) {
      this.filmCounts = null;
    }
  }

  public int getFilmCountsStringSize() {
    return (this.filmCountsString == null) ? 0 : this.filmCountsString.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<String> getFilmCountsStringIterator() {
    return (this.filmCountsString == null) ? null : this.filmCountsString.iterator();
  }

  public void addToFilmCountsString(String elem) {
    if (this.filmCountsString == null) {
      this.filmCountsString = new java.util.ArrayList<String>();
    }
    this.filmCountsString.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<String> getFilmCountsString() {
    return this.filmCountsString;
  }

  public MovieInfo setFilmCountsString(@org.apache.thrift.annotation.Nullable java.util.List<String> filmCountsString) {
    this.filmCountsString = filmCountsString;
    return this;
  }

  public void unsetFilmCountsString() {
    this.filmCountsString = null;
  }

  /** Returns true if field filmCountsString is set (has been assigned a value) and false otherwise */
  public boolean isSetFilmCountsString() {
    return this.filmCountsString != null;
  }

  public void setFilmCountsStringIsSet(boolean value) {
    if (!value) {
      this.filmCountsString = null;
    }
  }

  public long getTimestamp() {
    return this.timestamp;
  }

  public MovieInfo setTimestamp(long timestamp) {
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    return this;
  }

  public void unsetTimestamp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  /** Returns true if field timestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetTimestamp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  public void setTimestampIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMESTAMP_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public BookInfo getBookInfo() {
    return this.bookInfo;
  }

  public MovieInfo setBookInfo(@org.apache.thrift.annotation.Nullable BookInfo bookInfo) {
    this.bookInfo = bookInfo;
    return this;
  }

  public void unsetBookInfo() {
    this.bookInfo = null;
  }

  /** Returns true if field bookInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetBookInfo() {
    return this.bookInfo != null;
  }

  public void setBookInfoIsSet(boolean value) {
    if (!value) {
      this.bookInfo = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable Object value) {
    switch (field) {
    case ACTORS_LAST_NAMES:
      if (value == null) {
        unsetActorsLastNames();
      } else {
        setActorsLastNames((java.util.List<String>)value);
      }
      break;

    case ACTORS_FIRST_NAMES:
      if (value == null) {
        unsetActorsFirstNames();
      } else {
        setActorsFirstNames((java.util.List<String>)value);
      }
      break;

    case DISPLAY_ACTORS:
      if (value == null) {
        unsetDisplayActors();
      } else {
        setDisplayActors((java.util.List<String>)value);
      }
      break;

    case FILM_ID:
      if (value == null) {
        unsetFilmId();
      } else {
        setFilmId((Integer)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case FILM_COUNTS:
      if (value == null) {
        unsetFilmCounts();
      } else {
        setFilmCounts((java.util.List<Integer>)value);
      }
      break;

    case FILM_COUNTS_STRING:
      if (value == null) {
        unsetFilmCountsString();
      } else {
        setFilmCountsString((java.util.List<String>)value);
      }
      break;

    case TIMESTAMP:
      if (value == null) {
        unsetTimestamp();
      } else {
        setTimestamp((Long)value);
      }
      break;

    case BOOK_INFO:
      if (value == null) {
        unsetBookInfo();
      } else {
        setBookInfo((BookInfo)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACTORS_LAST_NAMES:
      return getActorsLastNames();

    case ACTORS_FIRST_NAMES:
      return getActorsFirstNames();

    case DISPLAY_ACTORS:
      return getDisplayActors();

    case FILM_ID:
      return getFilmId();

    case TITLE:
      return getTitle();

    case FILM_COUNTS:
      return getFilmCounts();

    case FILM_COUNTS_STRING:
      return getFilmCountsString();

    case TIMESTAMP:
      return getTimestamp();

    case BOOK_INFO:
      return getBookInfo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACTORS_LAST_NAMES:
      return isSetActorsLastNames();
    case ACTORS_FIRST_NAMES:
      return isSetActorsFirstNames();
    case DISPLAY_ACTORS:
      return isSetDisplayActors();
    case FILM_ID:
      return isSetFilmId();
    case TITLE:
      return isSetTitle();
    case FILM_COUNTS:
      return isSetFilmCounts();
    case FILM_COUNTS_STRING:
      return isSetFilmCountsString();
    case TIMESTAMP:
      return isSetTimestamp();
    case BOOK_INFO:
      return isSetBookInfo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MovieInfo)
      return this.equals((MovieInfo)that);
    return false;
  }

  public boolean equals(MovieInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_actorsLastNames = true && this.isSetActorsLastNames();
    boolean that_present_actorsLastNames = true && that.isSetActorsLastNames();
    if (this_present_actorsLastNames || that_present_actorsLastNames) {
      if (!(this_present_actorsLastNames && that_present_actorsLastNames))
        return false;
      if (!this.actorsLastNames.equals(that.actorsLastNames))
        return false;
    }

    boolean this_present_actorsFirstNames = true && this.isSetActorsFirstNames();
    boolean that_present_actorsFirstNames = true && that.isSetActorsFirstNames();
    if (this_present_actorsFirstNames || that_present_actorsFirstNames) {
      if (!(this_present_actorsFirstNames && that_present_actorsFirstNames))
        return false;
      if (!this.actorsFirstNames.equals(that.actorsFirstNames))
        return false;
    }

    boolean this_present_displayActors = true && this.isSetDisplayActors();
    boolean that_present_displayActors = true && that.isSetDisplayActors();
    if (this_present_displayActors || that_present_displayActors) {
      if (!(this_present_displayActors && that_present_displayActors))
        return false;
      if (!this.displayActors.equals(that.displayActors))
        return false;
    }

    boolean this_present_filmId = true;
    boolean that_present_filmId = true;
    if (this_present_filmId || that_present_filmId) {
      if (!(this_present_filmId && that_present_filmId))
        return false;
      if (this.filmId != that.filmId)
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_filmCounts = true && this.isSetFilmCounts();
    boolean that_present_filmCounts = true && that.isSetFilmCounts();
    if (this_present_filmCounts || that_present_filmCounts) {
      if (!(this_present_filmCounts && that_present_filmCounts))
        return false;
      if (!this.filmCounts.equals(that.filmCounts))
        return false;
    }

    boolean this_present_filmCountsString = true && this.isSetFilmCountsString();
    boolean that_present_filmCountsString = true && that.isSetFilmCountsString();
    if (this_present_filmCountsString || that_present_filmCountsString) {
      if (!(this_present_filmCountsString && that_present_filmCountsString))
        return false;
      if (!this.filmCountsString.equals(that.filmCountsString))
        return false;
    }

    boolean this_present_timestamp = true;
    boolean that_present_timestamp = true;
    if (this_present_timestamp || that_present_timestamp) {
      if (!(this_present_timestamp && that_present_timestamp))
        return false;
      if (this.timestamp != that.timestamp)
        return false;
    }

    boolean this_present_bookInfo = true && this.isSetBookInfo();
    boolean that_present_bookInfo = true && that.isSetBookInfo();
    if (this_present_bookInfo || that_present_bookInfo) {
      if (!(this_present_bookInfo && that_present_bookInfo))
        return false;
      if (!this.bookInfo.equals(that.bookInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetActorsLastNames()) ? 131071 : 524287);
    if (isSetActorsLastNames())
      hashCode = hashCode * 8191 + actorsLastNames.hashCode();

    hashCode = hashCode * 8191 + ((isSetActorsFirstNames()) ? 131071 : 524287);
    if (isSetActorsFirstNames())
      hashCode = hashCode * 8191 + actorsFirstNames.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplayActors()) ? 131071 : 524287);
    if (isSetDisplayActors())
      hashCode = hashCode * 8191 + displayActors.hashCode();

    hashCode = hashCode * 8191 + filmId;

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetFilmCounts()) ? 131071 : 524287);
    if (isSetFilmCounts())
      hashCode = hashCode * 8191 + filmCounts.hashCode();

    hashCode = hashCode * 8191 + ((isSetFilmCountsString()) ? 131071 : 524287);
    if (isSetFilmCountsString())
      hashCode = hashCode * 8191 + filmCountsString.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(timestamp);

    hashCode = hashCode * 8191 + ((isSetBookInfo()) ? 131071 : 524287);
    if (isSetBookInfo())
      hashCode = hashCode * 8191 + bookInfo.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(MovieInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetActorsLastNames()).compareTo(other.isSetActorsLastNames());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActorsLastNames()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actorsLastNames, other.actorsLastNames);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetActorsFirstNames()).compareTo(other.isSetActorsFirstNames());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActorsFirstNames()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actorsFirstNames, other.actorsFirstNames);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayActors()).compareTo(other.isSetDisplayActors());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayActors()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayActors, other.displayActors);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFilmId()).compareTo(other.isSetFilmId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFilmId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filmId, other.filmId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFilmCounts()).compareTo(other.isSetFilmCounts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFilmCounts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filmCounts, other.filmCounts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFilmCountsString()).compareTo(other.isSetFilmCountsString());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFilmCountsString()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filmCountsString, other.filmCountsString);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamp, other.timestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBookInfo()).compareTo(other.isSetBookInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBookInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bookInfo, other.bookInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MovieInfo(");
    boolean first = true;

    sb.append("actorsLastNames:");
    if (this.actorsLastNames == null) {
      sb.append("null");
    } else {
      sb.append(this.actorsLastNames);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("actorsFirstNames:");
    if (this.actorsFirstNames == null) {
      sb.append("null");
    } else {
      sb.append(this.actorsFirstNames);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayActors:");
    if (this.displayActors == null) {
      sb.append("null");
    } else {
      sb.append(this.displayActors);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("filmId:");
    sb.append(this.filmId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("filmCounts:");
    if (this.filmCounts == null) {
      sb.append("null");
    } else {
      sb.append(this.filmCounts);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("filmCountsString:");
    if (this.filmCountsString == null) {
      sb.append("null");
    } else {
      sb.append(this.filmCountsString);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamp:");
    sb.append(this.timestamp);
    first = false;
    if (isSetBookInfo()) {
      if (!first) sb.append(", ");
      sb.append("bookInfo:");
      if (this.bookInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.bookInfo);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (bookInfo != null) {
      bookInfo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MovieInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MovieInfoStandardScheme getScheme() {
      return new MovieInfoStandardScheme();
    }
  }

  private static class MovieInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<MovieInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MovieInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // ACTORS_LAST_NAMES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.actorsLastNames = new java.util.ArrayList<String>(_list16.size);
                @org.apache.thrift.annotation.Nullable String _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = iprot.readString();
                  struct.actorsLastNames.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setActorsLastNamesIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACTORS_FIRST_NAMES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct.actorsFirstNames = new java.util.ArrayList<String>(_list19.size);
                @org.apache.thrift.annotation.Nullable String _elem20;
                for (int _i21 = 0; _i21 < _list19.size; ++_i21)
                {
                  _elem20 = iprot.readString();
                  struct.actorsFirstNames.add(_elem20);
                }
                iprot.readListEnd();
              }
              struct.setActorsFirstNamesIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DISPLAY_ACTORS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list22 = iprot.readListBegin();
                struct.displayActors = new java.util.ArrayList<String>(_list22.size);
                @org.apache.thrift.annotation.Nullable String _elem23;
                for (int _i24 = 0; _i24 < _list22.size; ++_i24)
                {
                  _elem23 = iprot.readString();
                  struct.displayActors.add(_elem23);
                }
                iprot.readListEnd();
              }
              struct.setDisplayActorsIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FILM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.filmId = iprot.readI32();
              struct.setFilmIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FILM_COUNTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list25 = iprot.readListBegin();
                struct.filmCounts = new java.util.ArrayList<Integer>(_list25.size);
                int _elem26;
                for (int _i27 = 0; _i27 < _list25.size; ++_i27)
                {
                  _elem26 = iprot.readI32();
                  struct.filmCounts.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.setFilmCountsIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FILM_COUNTS_STRING
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list28 = iprot.readListBegin();
                struct.filmCountsString = new java.util.ArrayList<String>(_list28.size);
                @org.apache.thrift.annotation.Nullable String _elem29;
                for (int _i30 = 0; _i30 < _list28.size; ++_i30)
                {
                  _elem29 = iprot.readString();
                  struct.filmCountsString.add(_elem29);
                }
                iprot.readListEnd();
              }
              struct.setFilmCountsStringIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.timestamp = iprot.readI64();
              struct.setTimestampIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BOOK_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.bookInfo = new BookInfo();
              struct.bookInfo.read(iprot);
              struct.setBookInfoIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MovieInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.actorsLastNames != null) {
        oprot.writeFieldBegin(ACTORS_LAST_NAMES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.actorsLastNames.size()));
          for (String _iter31 : struct.actorsLastNames)
          {
            oprot.writeString(_iter31);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.actorsFirstNames != null) {
        oprot.writeFieldBegin(ACTORS_FIRST_NAMES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.actorsFirstNames.size()));
          for (String _iter32 : struct.actorsFirstNames)
          {
            oprot.writeString(_iter32);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.displayActors != null) {
        oprot.writeFieldBegin(DISPLAY_ACTORS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.displayActors.size()));
          for (String _iter33 : struct.displayActors)
          {
            oprot.writeString(_iter33);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FILM_ID_FIELD_DESC);
      oprot.writeI32(struct.filmId);
      oprot.writeFieldEnd();
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.filmCounts != null) {
        oprot.writeFieldBegin(FILM_COUNTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.filmCounts.size()));
          for (int _iter34 : struct.filmCounts)
          {
            oprot.writeI32(_iter34);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.filmCountsString != null) {
        oprot.writeFieldBegin(FILM_COUNTS_STRING_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.filmCountsString.size()));
          for (String _iter35 : struct.filmCountsString)
          {
            oprot.writeString(_iter35);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
      oprot.writeI64(struct.timestamp);
      oprot.writeFieldEnd();
      if (struct.bookInfo != null) {
        if (struct.isSetBookInfo()) {
          oprot.writeFieldBegin(BOOK_INFO_FIELD_DESC);
          struct.bookInfo.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MovieInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MovieInfoTupleScheme getScheme() {
      return new MovieInfoTupleScheme();
    }
  }

  private static class MovieInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<MovieInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MovieInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetActorsLastNames()) {
        optionals.set(0);
      }
      if (struct.isSetActorsFirstNames()) {
        optionals.set(1);
      }
      if (struct.isSetDisplayActors()) {
        optionals.set(2);
      }
      if (struct.isSetFilmId()) {
        optionals.set(3);
      }
      if (struct.isSetTitle()) {
        optionals.set(4);
      }
      if (struct.isSetFilmCounts()) {
        optionals.set(5);
      }
      if (struct.isSetFilmCountsString()) {
        optionals.set(6);
      }
      if (struct.isSetTimestamp()) {
        optionals.set(7);
      }
      if (struct.isSetBookInfo()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetActorsLastNames()) {
        {
          oprot.writeI32(struct.actorsLastNames.size());
          for (String _iter36 : struct.actorsLastNames)
          {
            oprot.writeString(_iter36);
          }
        }
      }
      if (struct.isSetActorsFirstNames()) {
        {
          oprot.writeI32(struct.actorsFirstNames.size());
          for (String _iter37 : struct.actorsFirstNames)
          {
            oprot.writeString(_iter37);
          }
        }
      }
      if (struct.isSetDisplayActors()) {
        {
          oprot.writeI32(struct.displayActors.size());
          for (String _iter38 : struct.displayActors)
          {
            oprot.writeString(_iter38);
          }
        }
      }
      if (struct.isSetFilmId()) {
        oprot.writeI32(struct.filmId);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetFilmCounts()) {
        {
          oprot.writeI32(struct.filmCounts.size());
          for (int _iter39 : struct.filmCounts)
          {
            oprot.writeI32(_iter39);
          }
        }
      }
      if (struct.isSetFilmCountsString()) {
        {
          oprot.writeI32(struct.filmCountsString.size());
          for (String _iter40 : struct.filmCountsString)
          {
            oprot.writeString(_iter40);
          }
        }
      }
      if (struct.isSetTimestamp()) {
        oprot.writeI64(struct.timestamp);
      }
      if (struct.isSetBookInfo()) {
        struct.bookInfo.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MovieInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list41 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.actorsLastNames = new java.util.ArrayList<String>(_list41.size);
          @org.apache.thrift.annotation.Nullable String _elem42;
          for (int _i43 = 0; _i43 < _list41.size; ++_i43)
          {
            _elem42 = iprot.readString();
            struct.actorsLastNames.add(_elem42);
          }
        }
        struct.setActorsLastNamesIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list44 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.actorsFirstNames = new java.util.ArrayList<String>(_list44.size);
          @org.apache.thrift.annotation.Nullable String _elem45;
          for (int _i46 = 0; _i46 < _list44.size; ++_i46)
          {
            _elem45 = iprot.readString();
            struct.actorsFirstNames.add(_elem45);
          }
        }
        struct.setActorsFirstNamesIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list47 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.displayActors = new java.util.ArrayList<String>(_list47.size);
          @org.apache.thrift.annotation.Nullable String _elem48;
          for (int _i49 = 0; _i49 < _list47.size; ++_i49)
          {
            _elem48 = iprot.readString();
            struct.displayActors.add(_elem48);
          }
        }
        struct.setDisplayActorsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.filmId = iprot.readI32();
        struct.setFilmIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list50 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.filmCounts = new java.util.ArrayList<Integer>(_list50.size);
          int _elem51;
          for (int _i52 = 0; _i52 < _list50.size; ++_i52)
          {
            _elem51 = iprot.readI32();
            struct.filmCounts.add(_elem51);
          }
        }
        struct.setFilmCountsIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.filmCountsString = new java.util.ArrayList<String>(_list53.size);
          @org.apache.thrift.annotation.Nullable String _elem54;
          for (int _i55 = 0; _i55 < _list53.size; ++_i55)
          {
            _elem54 = iprot.readString();
            struct.filmCountsString.add(_elem54);
          }
        }
        struct.setFilmCountsStringIsSet(true);
      }
      if (incoming.get(7)) {
        struct.timestamp = iprot.readI64();
        struct.setTimestampIsSet(true);
      }
      if (incoming.get(8)) {
        struct.bookInfo = new BookInfo();
        struct.bookInfo.read(iprot);
        struct.setBookInfoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

